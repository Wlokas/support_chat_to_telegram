<?php

    function chat() {
        global $telegram;

        $user = R::findOne('accounts', 'telegram = ?', [DATA['from']]);
        if(!$user) {
            $user = newMember();
        }

        if($user->username != DATA['login']) {
            $user->username = DATA['login'];
            R::store($user);
        }

        if (DATA['cmd'][0] == 'generateRandom') doGenerateInfo($user);
        if(!$user->name && !$user->description) {
            if(preg_match('/^(.*?) (.*)$/', DATA['msg'], $match)) {
                $user->name = $match[1];
                $user->description = $match[2];
                R::store($user);

                $telegram->send([
                    'from' => DATA['chat'],
                    'text' => [
                        '<b>–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>',
                        'üëî –ò–º—è: ' . $match[1],
                        'üëñ –î–æ–ª–∂–Ω–æ—Å—Ç—å: ' . $match[2],
                    ]
                ]);
            } else {
                $btn[0][0] = ['text' => 'üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–µ', 'callback_data' => 'generateRandom'];
                $telegram->send([
                    'from' => DATA['chat'],
                    'text' => [
                        'üßî <b>–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–µ –∏–º—è –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å,</b>',
                        '<b>–∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—Å—è –≤ –æ–∫–Ω–µ —á–∞—Ç–∞</b>',
                        '',
                        '<b>–ü–æ —Ñ–æ—Ä–º–µ: –ò–º—è –î–æ–ª–∂–Ω–æ—Å—Ç—å</b>',
                        '',
                        '<b>–ü—Ä–∏–º–µ—Ä: –ê–Ω–¥—Ä–µ–π –û–ø–µ—Ä–∞—Ç–æ—Ä</b>'
                    ],
                    'reply' => [true, $btn]
                ]);
                exit();
            }
        }
        if(DATA['member']) doJoin();
        if(DATA['cmd'][0] == "/help") doHelp();
        if(DATA['cmd'][0] == "/work") doWork($user);
        if(DATA['cmd'][0] == "/supports") doSupports();
        if(DATA['cmd'][0] == "/chats") doChats();
    }

    function doChats() {
        global $memcached, $telegram;
        $keys_sessions = $memcached->getAllKeys();
        $sessions_data = R::getAll('SELECT * FROM `sessions` WHERE `status` = "wait_agent"');
        $sessions = [];
        $btns = [];
        $index_line = 0;
        $index_button = 0;
        foreach ($sessions_data as $key => $session) {
            $session_id = $session['id'];
            if(array_search('chsp' . $session_id, $keys_sessions) !== FALSE) {
                if($index_button > 4) { $index_button = 0; $index_line++; }
                $sessions[] = date($key + 1 . '. ‚åõ –û–∂–∏–¥–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.. | H:i', $session['last_update']);
                $btns[$index_line][$index_button] = ['text' => $key + 1, 'url' => 't.me/' . $telegram->getMe()->username . '?start=' . $session_id];
                $index_button++;
            }
        }
        if(count($sessions) >= 1) {
            $text = array_merge(['üéß <b>–ß–∞—Ç—ã –æ–∂–∏–¥–∞—é—â–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞:</b>', ''], $sessions);
            $telegram->send(['from' => CFG['chat_id'],
                'text' => $text,
                'reply' => [true, $btns]]);
        } else {
            $telegram->send(['from' => CFG['chat_id'],
                'text' => [
                    'üéß <b>–ß–∞—Ç–æ–≤ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç</b>'
                ]]);
        }
    }

    function doSupports() {
        global $telegram;
        $supports = R::getAll('SELECT * FROM accounts WHERE status = 1');
        $message = [];
        foreach ($supports as $support) {
            $message[] = $support['username'];
        }
        if(count($message) >= 1) {
            $text = array_merge(['ü¶∫ <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –≤–æ—Ä–∫–µ—Ä—ã:</b>', ''], $message);
            $telegram->send(['from' => CFG['chat_id'],
                'text' => $text]);
        } else {
            $telegram->send(['from' => CFG['chat_id'],
                'text' => [
                    'ü©∏ <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç</b>'
                ]]);
        }
    }

    function doWork($user) {
        global $telegram;
        if($user->status == 0) {
            $user->status = 1;
            $telegram->send(['from' => CFG['chat_id'],
                'text' => [
                    'üìó <b>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Å—Ç—É–ø–∏–ª–∏ –Ω–∞ —Å–ª—É–∂–±—É</b>'
                ]]);
        } elseif($user->status == 1) {
            $user->status = 0;
            $telegram->send(['from' => CFG['chat_id'],
                'text' => [
                    'üìï <b>–í—ã –≤—ã—à–ª–∏ —Å–æ —Å–ª—É–∂–±—ã</b>'
                ]]);
        }

        R::store($user);
    }

    function doHelp() {
        global $telegram;
        $telegram->send(['from' => CFG['chat_id'],
            'text' => [
                '<b>–ö–æ–º–∞–Ω–¥—ã:</b>',
                '/help - –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã',
                '/work - –Ω–∞—á–∞—Ç—å/–∑–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É',
                '/supports - —É–∑–Ω–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤',
                '/chats - –≤—ã–≤–µ—Å—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã'
            ]]);
    }

    function doJoin() {
        global $telegram;
        $btn[0][0] = ['text' => 'üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–µ', 'callback_data' => 'generateRandom'];
        $telegram->send(['from' => CFG['chat_id'],
            'text' => [
                'üéà <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>',
                '',
                '–ù–∞–ø–∏—à–∏ –Ω–∏–∂–µ <b>–ò–º—è</b> –∏ <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å</b> –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ —á–∞—Ç–µ',
                '–ü—Ä–∏–º–µ—Ä: –ê–Ω–¥—Ä–µ–π –û—Ç–¥–µ–ª –ü—Ä–æ–¥–∞–∂',
                '',
                '<b>–ö–æ–º–∞–Ω–¥—ã:</b>',
                '/help - –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã',
                '/work - –Ω–∞—á–∞—Ç—å/–∑–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É',
                '/supports - —É–∑–Ω–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤',
                '/chats - –≤—ã–≤–µ—Å—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã'
            ], 'reply' => [true, $btn]]);
    }

    function doGenerateInfo($user) {
        global $telegram;
        switch (rand(0, 5)) {
            case 0: $name = "–ê–Ω–¥—Ä–µ–π"; break;
            case 1: $name = "–í–∏–∫—Ç–æ—Ä"; break;
            case 2: $name = "–ê–ª–µ–∫—Å–µ–π"; break;
            case 3: $name = "–í–∏—Ç–∞–ª–∏–π"; break;
            case 4: $name = "–î–∞–Ω–∏–∏–ª"; break;
            case 5: $name = "–ï–≥–æ—Ä"; break;
        }
        $user->name = $name;
        $user->description = "–û–ø–µ—Ä–∞—Ç–æ—Ä";
        R::store($user);

        $telegram->send([
            'from' => DATA['chat'],
            'text' => [
                '<b>–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>',
                'üëî –ò–º—è: ' . $name,
                'üëñ –î–æ–ª–∂–Ω–æ—Å—Ç—å: ' . '–û–ø–µ—Ä–∞—Ç–æ—Ä',
            ]
        ]);
    }

    function newMember() {
        $account = R::dispense('accounts');
        $account->telegram = DATA['from'];
        $account->username = DATA['login'];
        $account->time_reg = time();
        $account->status = 0;
        R::store($account);
        return $account;
    }
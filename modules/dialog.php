<?php
    function dialog() {
        global $telegram;
        function getActiveSession($user) {
            global $memcached;
            $session = R::findOne('sessions', 'telegram = ? and status = "active"', [$user->telegram]);
            return ($session && $memcached->get('chsp' . $session->id)) ? $session->id : false;
        }

        $user = R::findOne('accounts', 'telegram = ?', [DATA['from']]);
        if($user) {
            if($user->username != DATA['login']) {
                $user->username = DATA['login'];
                R::store($user);
            }
            if (DATA['cmd'][0] == 'generateRandom') doGenerateInfo($user);
            if(!$user->name && !$user->description) {
                if(preg_match('/^(.*?) (.*)$/', DATA['msg'], $match)) {
                    $user->name = $match[1];
                    $user->description = $match[2];
                    R::store($user);

                    $telegram->send([
                        'from' => DATA['chat'],
                        'text' => [
                            '<b>–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>',
                            'üëî –ò–º—è: ' . $match[1],
                            'üëñ –î–æ–ª–∂–Ω–æ—Å—Ç—å: ' . $match[2],
                        ]
                    ]);
                } else {
                    $btn[0][0] = ['text' => 'üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–µ', 'callback_data' => 'generateRandom'];
                    $telegram->send([
                        'from' => DATA['chat'],
                        'text' => [
                            'üßî <b>–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–µ –∏–º—è –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å,</b>',
                            '<b>–∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—Å—è –≤ –æ–∫–Ω–µ —á–∞—Ç–∞</b>',
                            '',
                            '<b>–ü–æ —Ñ–æ—Ä–º–µ: –ò–º—è –î–æ–ª–∂–Ω–æ—Å—Ç—å</b>',
                            '',
                            '<b>–ü—Ä–∏–º–µ—Ä: –ê–Ω–¥—Ä–µ–π –û–ø–µ—Ä–∞—Ç–æ—Ä</b>'
                        ],
                        'reply' => [true, $btn]
                    ]);
                    exit();
                }
            }
            if (DATA['cmd'][0] == '/start' && !empty(DATA['cmd'][1])) doJoin($user);
            $id = getActiveSession($user);
            if($id) {
                if (DATA['msg'] == 'üîí –ó–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥') doClose($user, $id);
                if (DATA['msg'] == 'üîô –û—Ç–¥–∞—Ç—å –¥—Ä—É–≥–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É') doChange($user, $id);
                if(!empty(DATA['msg'])) doSend($user, $id);
            }
        }
    }

    function doSend($user, $id) {
        $chat = new Chat($id);
        $chat->addMessage('agent', DATA['msg']);
    }

    function doChange($user, $id) {
        global $telegram;
        $chat = new Chat($id);

        $chat->updateHistory(['type' => 'agent_change']);
        $session = $chat->getSession();
        $session->status = 'wait_agent';

        $btn[0][0] = [
            'text' => 'üë• –í–∑—è—Ç—å –¥–∏–∞–ª–æ–≥',
            'url' => 't.me/' . $telegram->getMe()->username . '?start=' . $session->id
        ];

        $message_id = $telegram->send([
            'from' => CFG['chat_id'],
            'text' => [
                'üì£ <b>–û–ø–µ—Ä–∞—Ç–æ—Ä '. DATA['login'] .' –æ—Ç–¥–∞–ª –¥–∏–∞–ª–æ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>',
                '',
                '<b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –≤–∑—è—Ç—å –¥–∏–∞–ª–æ–≥.</b>'
            ],
            'reply' => [
                true, $btn
            ]
        ]);
        $session->telegram_id_message = $message_id;
        R::store($session);

        exit();
    }

    function doClose($user, $id_session) {
        global $telegram;
        $chat = new Chat($id_session);

        $chat->closeSession();
        $btn[0][0] = ['text' => '–î–∏–∞–ª–æ–≥ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω'];
        $telegram->send([
            'text' => '<b>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –¥–∏–∞–ª–æ–≥</b>',
            'reply' => [false, $btn]
        ]);
        exit();
    }

    function doJoin($user) {
        global $telegram;

        function checkSession($id) {
            global $memcached;
            $data = $memcached->get('chsp' . $id);
            return $data ? true : false;
        }

        if(getActiveSession($user)) {
            $btn[0][0] = ['text' => 'üîí –ó–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥'];
            $btn[0][1] = ['text' => 'üîô –û—Ç–¥–∞—Ç—å –¥—Ä—É–≥–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É'];
            $telegram->send([
               'text' => '‚õî –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ, –≤—ã–π–¥–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –¥—Ä—É–≥–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.',
               'reply' => [false, $btn]
            ]);
            exit();
        }

        $session = R::findOne('sessions', 'id = ? and status = "wait_agent"', [DATA['cmd'][1]]);
        if(!$session || !checkSession($session->id)) {
            $telegram->send([
                'text' => '‚ö† –î–∏–∞–ª–æ–≥ —É–∂–µ –≤–∑—è–ª –¥—Ä—É–≥–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä, –ª–∏–±–æ –¥–∏–∞–ª–æ–≥–∞ –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.',
                'reply' => [false, []]
            ]);
            exit();
        }

        $cache = new Chat(DATA['cmd'][1]);

        $session = $cache->getSession();
        $session->telegram = DATA['from'];
        $session->status = 'active';
        R::store($session);

        $user->status = 1;
        R::store($user);

        $telegram->send(['from' => CFG['chat_id'], 'message_id' => $session->telegram_id_message, 'text' => '<b>–î–∏–∞–ª–æ–≥ –≤–∑—è–ª –æ–ø–µ—Ä–∞—Ç–æ—Ä '. DATA['login'] .'</b>']);

        $cache->updateHistory(['type' => 'agent_join', 'name' => $user->name, 'description' => $user->description]);

        $btn[0][0] = ['text' => 'üîí –ó–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥'];
        $btn[0][1] = ['text' => 'üîô –û—Ç–¥–∞—Ç—å –¥—Ä—É–≥–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É'];
        $telegram->send([
            'text' => '<b>üö™ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –¥–∏–∞–ª–æ–≥—É</b>',
            'reply' => [false, $btn]
        ]);

        foreach ($cache->getHistory()['updates'] as $update) {
            switch ($update['type']) {
                case 'user':
                    $telegram->send(['text' => $update['text']]);
                    break;
                case 'agent':
                    $telegram->send(['text' => '<b>' . $update['name'] . '(–û–ø–µ—Ä–∞—Ç–æ—Ä): ' . $update['text'] . '</b>']);
                    break;
            }
        }
        exit();
    }